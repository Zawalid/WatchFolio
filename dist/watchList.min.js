"use strict";import{downloadList,downloadWatchListContainer}from"/download.min.js";import{closeList,toggleList,displayShow,displayList,removeFromList,clearList,sortList,searchList,showSearchInput,hideSearchInput,retrieveFromLocalStorageOrDatabase,storeInLocalStorageOrDatabase,updateLocalStorageOrDatabase}from"/utilities.min.js";const watchListContainer=document.getElementById("watchList");const watchListButtons=document.querySelectorAll("#watchListButtons button");const actions=watchListContainer.querySelector("#actions");let currentListShows=[...watchListContainer.querySelectorAll("a")];export const watchLists={watched:{name:"watched",defaultButton:"I Watched",activeButton:`<i class="fa-solid fa-circle-check"></i> Watched`,shows:new Set},watching:{name:"watching",defaultButton:"I'm Watching",activeButton:`<i class="fa-solid fa-eye"></i> Watching`,shows:new Set},willWatch:{name:"willWatch",defaultButton:"I Will Watch",activeButton:`<i class="fa-solid fa-calendar-plus"></i> Will Watch`,shows:new Set}};for(let list in watchLists){list=watchLists[list];retrieveFromLocalStorageOrDatabase("watchList",list).then(res=>{const interval=setInterval(()=>{res.shows.forEach(id=>{if(id===window.location.search.split("=")[1]&&document.querySelector(`#overview [data-list=${list.name}]`)){document.querySelector(`#overview [data-favorite=shows]`);document.querySelector(`#overview [data-list=${list.name}]`).innerHTML=list.activeButton;clearInterval(interval)}})})})}storeInLocalStorageOrDatabase("watchList",["watched","watching","willWatch"]);export const addToWatchList=(id,list)=>{[watchLists.watched.shows,watchLists.watching.shows,watchLists.willWatch.shows].forEach(l=>l.has(id)&&l.delete(id));[watchLists.watched,watchLists.watching,watchLists.willWatch].forEach(list=>document.querySelector(`[data-list="${list.name}"]`).innerHTML=list.defaultButton);list.shows.add(id);updateLocalStorageOrDatabase("watchList",[watchLists.watched,watchLists.watching,watchLists.willWatch])};export const removeFromWatchList=(id,list)=>{list.shows.delete(id);updateLocalStorageOrDatabase("watchList",[watchLists.watched,watchLists.watching,watchLists.willWatch])};const displayShowsFromWatchList=async list=>{watchListButtons.forEach(button=>button.classList.remove("active"));watchListContainer.querySelector(`button[data-list='${list}'`).classList.add("active");const showsIds=watchLists[list].shows;showsIds.size===0?[...actions.querySelectorAll("i")].slice(1).forEach(i=>{i.classList.replace("text-textColor2","text-[darkslategray]");i.classList.replace("cursor-pointer","cursor-not-allowed")}):[...actions.querySelectorAll("i")].slice(1).forEach(i=>{i.classList.replace("text-[darkslategray]","text-textColor2");i.classList.replace("cursor-not-allowed","cursor-pointer")});const emptyList=`
  <div class="flex flex-col items-center h-full justify-center ">
  <img src="imgs/undraw_no_data_re_kwbl.svg" alt="" class="w-[120px] mb-5">
  <h2 class="font-bold text-textColor2 text-lg">List is empty</div>
  </div>
  `;let html=showsIds.size>0?(await Promise.all([...showsIds].map(id=>displayShow(id,watchListContainer)))).join(""):emptyList;watchListContainer.querySelector("#shows").innerHTML=html;currentListShows=[...watchListContainer.querySelectorAll("a")]};removeFromList("removeFromWatchList",watchListContainer,"list",watchLists,displayShowsFromWatchList,removeFromWatchList);displayList(watchListButtons,watchListContainer,"list",displayShowsFromWatchList);toggleList("watchList_toggler",watchListContainer,actions,displayShowsFromWatchList);closeList("watchList_toggler",watchListContainer,actions,displayShowsFromWatchList);actions.querySelector("#download").addEventListener("click",e=>{window.matchMedia("(min-width: 768px)").matches&&document.body.classList.add("h-screen","overflow-hidden")||window.scrollTo(0,0);document.getElementById("listName").innerHTML=watchLists[watchListContainer.dataset.current_list].name;watchLists[watchListContainer.dataset.current_list].shows.size===0&&document.getElementById("emptyListWarning").classList.replace("hidden","flex");downloadWatchListContainer.classList.add("show");setTimeout(()=>{document.getElementById("emptyListWarning").classList.replace("flex","hidden")},3e3)});downloadWatchListContainer.addEventListener("click",function(e){if(e.target.closest("#close")||e.target===e.currentTarget||e.target.closest("ul")){this.classList.remove("show");window.matchMedia("(min-width: 768px)").matches&&window.location.pathname.includes("show.html")?document.body.classList.remove("h-screen","overflow-hidden"):document.body.classList.remove("overflow-hidden");document.getElementById("downloadAllContainer").classList.add("translate-y-full")}if(e.target.closest("#download")){downloadList([...this.querySelectorAll("input")].find(input=>input.checked).value,watchLists[watchListContainer.dataset.current_list])}if(e.target.closest("#downloadAll")){downloadList([...this.querySelectorAll("input")].find(input=>input.checked).value,"all")}});clearList(watchListContainer,watchLists,"list",displayShowsFromWatchList);sortList(watchListContainer);const searchListInput=watchListContainer.querySelector("input");actions.querySelector("#search").addEventListener("click",()=>{showSearchInput(watchListContainer,searchListInput,watchLists,"list")});searchListInput.addEventListener("keyup",e=>{if(e.key==="Enter"){searchList(searchListInput,watchListContainer,currentListShows);hideSearchInput(searchListInput)}});