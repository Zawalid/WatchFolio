"use strict";import{watchLists as t}from"/watchList.min.js";import"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js";import"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js";const e=document.getElementById("downloadList"),n=async()=>({watchedShows:await i([...t.watched.shows]),watchingShows:await i([...t.watching.shows]),willWatchShows:await i([...t.willWatch.shows])}),i=async e=>{var a=[];if(""!==e[0])for(let t=0;t<e.length;t++){var l=await(await fetch("https://api.tvmaze.com/shows/"+e[t])).json();a.push(l)}return a},a=async a=>{var t=t=>{var e=document.createElement("table");e.innerHTML=t,e.className="bg-gradient  w-full table-fixed border border-gray-300",document.body.appendChild(e),t=e,(new jspdf.jsPDF).html(t,{callback:function(t){t.save(`${"all"===a?"watchList":a.name}.pdf`)},x:15,y:15,width:170,windowWidth:650}),e.remove()};if("all"===a){const{watchedShows:l,watchingShows:s,willWatchShows:r}=await n(),c=Math.max(l.length,s.length,r.length);t(`
    <table >
      <thead>
        <tr>
          <th class="border border-gray-300 p-5 pb-8 text-2xl text-textColor2">
            Watched
          </th>
          <th class="border border-gray-300 p-5 pb-8 text-2xl text-textColor2">
            Watching
          </th>
          <th class="border border-gray-300 p-5 pb-8 text-2xl text-textColor2">
            Will Watch
          </th>
        </tr>
      </thead>
      <tbody>
        ${await(async()=>{var e=[];for(let t=0;t<c;t++)e.push(`
      <tr>
        ${l[t]?`
            <td class="border-r border-l border-gray-300 p-4">
              <div class="flex flex-col items-center justify-center gap-3 py-5">
                <img
                  src="${l[t].image.medium}"
                  alt=""
                  class="w-[100px] rounded-xl"
                />
                <h3 class="text-center text-lg font-bold text-textColor">
                  ${l[t].name}
                </h3>
              </div>
            </td>
            `:"<td></td>"}
        ${s[t]?`
            <td class="p-4">
              <div class="flex flex-col items-center justify-center gap-3 py-5">
                <img
                  src="${s[t].image.medium}"
                  alt=""
                  class="w-[100px] rounded-xl"
                />
                <h3 class="text-center text-lg font-bold text-textColor">
                  ${s[t].name}
                </h3>
              </div>
            </td>
            `:"<td></td>"}
        ${r[t]?`
            <td class="border-r border-l border-gray-300 p-4">
              <div class="flex flex-col items-center justify-center gap-3 py-5">
                <img
                  src="${willWatch[t].image.medium}"
                  alt=""
                  class="w-[100px] rounded-xl"
                />
                <h3 class="text-center text-lg font-bold text-textColor">
                  ${willWatch[t].name}
                </h3>
              </div>
            </td>
            `:"<td></td>"}
      </tr>
    `);return e.join("")})()}
      </tbody>
    </table>
    `)}else{const o=await i([...a.shows]),d=o.length/3;t(`
    <table >
      <thead>
        <tr>
          <th class="border border-gray-300 p-5 pb-8 text-2xl text-textColor2" colspan="3">
            ${a.name}
          </th>
        </tr>
      </thead>
      <tbody>
        ${await(async()=>{var e=[];for(let t=0;t<d;t++)e.push(`
      <tr>
        ${o[3*t]?` 
            <td class="border-r border-l border-gray-300 p-4">
              <div class="flex flex-col items-center justify-center gap-3 py-5">
                <img
                  src="${o[3*t].image.medium}"
                  alt=""
                  class="w-[100px] rounded-xl"
                />
                <h3 class="text-center text-lg font-bold text-textColor">
                  ${o[3*t].name}
                </h3>
              </div>
            </td>
            `:"<td></td>"}
        ${o[3*t+1]?`
            <td class="border-r border-l border-gray-300 p-4">
              <div class="flex flex-col items-center justify-center gap-3 py-5">
                <img
                  src="${o[3*t+1].image.medium}"

                  alt=""
                  class="w-[100px] rounded-xl"
                />
                <h3 class="text-center text-lg font-bold text-textColor">
                  ${o[3*t+1].name}

                </h3>
              </div>
            </td>
            `:"<td></td>"}
        ${o[3*t+2]?`
          <td class="p-4">
            <div class="flex flex-col items-center justify-center gap-3 py-5">
              <img
                src="${o[3*t+2].image.medium}"

                alt=""
                class="w-[100px] rounded-xl"
              />
              <h3 class="text-center text-lg font-bold text-textColor">
                ${o[3*t+2].name}

              </h3>
            </div>
          </td>
          `:"<td></td>"}
      </tr>
    `);return e.join("")})()}
      </tbody>
    </table>
    `)}},l=async t=>{var{watchedShows:e,watchingShows:a,willWatchShows:l}=await n(),e=await("all"===t?{watched:e,watching:a,willWatch:l}:{[t.name]:await i([...t.shows])}),a=new Blob([JSON.stringify(e)],{type:"application/json"}),l=URL.createObjectURL(a),e=document.createElement("a");e.href=l,e.download=`${"all"===t?"watchList":t.name}.json`,e.click(),e.remove()},s=async(t,l)=>{const{watchedShows:s,watchingShows:r,willWatchShows:c}=await n();var e=await(async()=>{var e=[];if("all"===l){e.push(`Watched,Watching,Will Watch
`);for(let t=0;t<Math.max(s.length,r.length,c.length);t++)e.push(`${s[t]?.name||""},`),e.push(`${r[t]?.name||""},`),e.push((c[t]?.name||"")+`
`)}else{var a=await i([...l.shows]);e.push(l.name+`
`);for(let t=0;t<a.length;t++)e.push(a[t].name+`
`)}return e.join("")})(),e=new Blob([e],{type:"text/"+("csv"===t?"csv":"plain")}),e=URL.createObjectURL(e),a=document.createElement("a");a.href=e,a.download=`${"all"===l?"watchList":l.name}.`+t,a.click(),a.remove()},r=(t,e)=>{switch(t){case"pdf":a(e);break;case"json":l(e);break;case"csv":s("csv",e);break;case"text":s("txt",e)}};e.querySelector("#showDownloadAll").addEventListener("click",()=>{document.getElementById("downloadAllContainer").classList.remove("translate-y-full")}),e.querySelector("#hideDownloadAll").addEventListener("click",()=>{document.getElementById("downloadAllContainer").classList.add("translate-y-full")});export{e as downloadWatchListContainer,r as downloadList};